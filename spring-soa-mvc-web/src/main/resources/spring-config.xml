<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 配置开启@Aspect支持 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--
    除了具有上面的功能之外，还具有自动将带有@component,@service,@Repository等注解的对象注册到spring容器中的功能
    -->
    <context:component-scan base-package="com.easy.archiecture"/>
    <!--是用于激活那些已经在spring容器里注册过的bean上面的注解，也就是显示的向Spring注册
    AutowiredAnnotationBeanPostProcessor
    CommonAnnotationBeanPostProcessor
    PersistenceAnnotationBeanPostProcessor
    RequiredAnnotationBeanPostProcessor
    仅能够在已经在已经注册过的bean上面起作用。对于没有在spring容器中注册的bean，它并不能执行任何操作。
    -->
    <context:annotation-config/>
    <!-- 配置开启@Aspect支持 开启动态代理-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--显式Controller参数校验器-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
    <!--主要就是为了Spring MVC来用的，提供Controller请求转发，json自动转换等功能-->
    <mvc:annotation-driven/>
    <!--
    DispatcherServlet请求映射配置为"/"，则Spring MVC将捕获Web容器所有的请求，包括静态资源的请求，Spring MVC会将它们当成一个普通请求处理，因此找不到对应处理器将导致错误。
    mvc:default-servlet-handler/的作用就是过滤静态资源请求,由服务器默认的Servlet程序处理
    -->
    <mvc:default-servlet-handler/>
<!--      加载视图控制机器  -->
<!--    <context:component-scan base-package="com.easy.archiecture.controller"/>-->
    <!--拦截器的配置-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.easy.archiecture.interceptor.AuthInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>